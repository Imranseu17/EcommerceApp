<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF6200EE</color>

    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>

    <color name="color_type_info">#79b3e4</color>
    <color name="color_type_help">#FFB300</color>
    <color name="color_type_wrong">#FFE70E45</color>
    <color name="color_type_warning">#FFB300</color>
    <color name="color_type_success">#00bfa5</color>
    <color name="placeholder_grey">#AAADC4</color>
    <color name="placeholder_grey_20">#33AAADC4</color>
    <color name="light_gray">#6e7f8d</color>
    <color name="color_dialog_gray">#ededf3</color>
    <color name="color_dialog_title">#303030</color>
    <color name="color_dialog_content_prompt">#343434</color>
    <color name="pink">#FFC0CB</color>
    <color name="placeholder_bg">#dddddd</color>
    <color name="background">#F9F9F9</color>
    <color name="mainText">#222222</color>
    <color name="bg_dark">#E5E5E5</color>
    <color name="red_200">#EF9A9A</color>
    <color name="red_100">#FFCDD2</color>
    <color name="green_500">#4CAF50</color>
    <!--Color-->

    <!--Material uses an organized approach to applying color by providing a set of attributes -->
    <!--which define the color of generalized UI elements such as backgrounds, surfaces, type -->
    <!--and icons. Using these attributes throughout your app makes it easy to change a single -->
    <!--color, or the entire theme, and have those changes cascade through the interface.-->

    <!--Color is customized by overriding Material Components color attributes with custom -->
    <!--color values. In this project, your themeâ€™s color attributes are already overridden -->
    <!--with default values defined in this file, color.xml.  Change any of the values in -->
    <!--this file to see changes applied across all elements of your app.-->

    <!--LIGHT COLOR THEME-->

    <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
    <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
    <!--selection controls.-->
    <color name="colorPrimary">#283e66</color>
    <color name="colorPrimaryVariant">#FF000000</color>
    <color name="colorSecondary">#ffffff</color>
    <color name="colorSecondaryVariant">#018786</color>

    <!--colorBackground appears behind scrollable content and is used for the default window-->
    <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
    <!--and menus. colorError is used to indicate an error state for components such as-->
    <!--text fields.-->
    <color name="colorBackground">#f2f2f2</color>
    <color name="colorSurface">#ffffff</color>
    <color name="colorError">#b00020</color>

    <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
    <!--on which they appear.-->
    <color name="colorOnPrimary">#ffffff</color>
    <color name="colorOnSecondary">#283e66</color>
    <color name="colorOnBackground">#283e66</color>
    <color name="colorOnSurface">#283e66</color>
    <color name="colorOnError">#ffffff</color>

    <color name="colorBottomNav">#f5f5f5</color>
    <color name="colorBottomNavItemChecked">#cf5727</color>
    <color name="colorBottomNavItemUnchecked">#c4c4c4</color>
    <color name="flash_background">#f0f1f5</color>
    <color name="gray">#9e9e9e</color>

</resources>